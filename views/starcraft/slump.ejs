<% include ./partials/header.ejs %>

  <body>
    <div class="container">
      <div class="rubrik">
        <h1><i class="fa fa-hand-spock-o" aria-hidden="true"></i> Lagslumparen</h1>
      </div>

      <!-- <div class="option-container">
      <div class="options">
        <div class="spelar-title">
          <label>Spelare 1</label>
          <select class="form-control last-game-choice">
            <option value="">Hatten</option>
            <option value="">Larz</option>
            <option value="">Korben</option>
          </select>
        </div>
        <div class="prev-game">
          <label>F√∂reg√•ende game</label>
          <select class="form-control">
            <option value="" selected></option>
            <option value="Zerg">Zerg</option>
            <option value="Protoss">Protoss</option>
            <option value="Terran">Terran</option>

          </select>
        </div>
        <div class="next-game">
          <label>N√§sta game</label>
          <input class="form-control next-game-choice" disabled>
        </div>
      </div>
      <div class="options">
        <div class="spelar-title">
          <label>Spelare 2</label>
          <select class="form-control last-game-choice">
            <option value="">Korben</option>
            <option value="">Hatten</option>
            <option value="">Larz</option>
          </select>
        </div>
        <div class="prev-game">
          <label>F√∂reg√•ende game</label>
          <select class="form-control">
            <option value="" selected></option>
            <option value="Zerg">Zerg</option>
            <option value="Protoss">Protoss</option>
            <option value="Terran">Terran</option>
          </select>
        </div>
        <div class="next-game">
          <label>N√§sta game</label>
          <input class="form-control next-game-choice" disabled>
        </div>
      </div>

      <div class="options">
        <div class="spelar-title">
          <label>Spelare 3</label>
          <select class="form-control last-game-choice">
            <option value="">Larz</option>
            <option value="">Hatten</option>
            <option value="">Korben</option>
          </select>
        </div>
        <div class="prev-game">
          <label>F√∂reg√•ende game</label>
          <select class="form-control">
            <option value="" selected></option>
            <option value="Zerg">Zerg</option>
            <option value="Protoss">Protoss</option>
            <option value="Terran">Terran</option>
          </select>
        </div>
        <div class="next-game">
          <label>N√§sta game</label>
          <input class="form-control next-game-choice" disabled>
        </div>
      </div>
    </div>
    <button id="play-game" class="btn btn-success"><i class="fa fa-check" aria-hidden="true"></i>
      V√§lj matchen</button> -->
      <!-- <button id="random-button" class="btn btn-success"><i class="fa fa-random" aria-hidden="true" onclick=""></i>
      Slumpa n√§sta match</button> -->

      <button class="btn btn-success" onclick=randomizeAndSendToDiscord()><i class="fa fa-random"
          aria-hidden="true"></i>
        Slumpa och skicka till Discord</button>
    </div>

    <!-- <script src="js/script.js"></script> -->
    <script>

      function test() {
        alert('test');
      }
      function randomizeAndSendToDiscord() {
        const webhookUrl = "https://discord.com/api/webhooks/883306106225590283/zzrjvy2wIEi1A8zjm5-N3upVG2PBcj3DRvd_G292M-ywIt8VrM4S2Yw-mnYbAX64aVL_";

        const players = ["Korben üå≠", "Lasse üßÄ", "Nyza üöú", "Hatten üéì"];
        
        const randomPlayers = shuffle(players);
        jsonObject = {
          username: "Webhook",
          avatar_url: "https://i.imgur.com/4M34hi2.png",
          embeds: [
            {
              title: "Lagslompen",
              color: 15258703,
              fields: [
                {
                  name: "Lag 1",
                  value: `${players[0]} \n ${players[1]} \n`,
                },
                {
                  name: "Lag 2",
                  value: `${players[2]} \n ${players[3]}`,
                }
              ]
            }
          ]
        }



        let jsonToSend = `
    {
    "username": "Webhook",
    "avatar_url": "https://i.imgur.com/4M34hi2.png",
    "embeds": [
      {

        "title": "Lagslompen",
        "color": 15258703,
        "fields": [
          {
            "name": "Lag 1",
            "value": "${players[0]} \n ${players[1]}",
            "inline": true
          },
          {
            "name": "Lag 2",
            "value": "${players[2]} \n ${players[3]}",
            "inline": true
          }
          ]
        }
      ]
    }
    `

        async function postData(url = "", data = "") {
          // Default options are marked with *
          const response = await fetch(url, {
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, *cors, same-origin
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, *same-origin, omit
            headers: {
              'Content-Type': 'application/json'
              // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: 'follow', // manual, *follow, error
            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
            body: JSON.stringify(jsonObject) // body data type must match "Content-Type" header
          });
          return response; // parses JSON response into native JavaScript objects
        }

        postData(webhookUrl, jsonToSend)
          .then(data => {
            alert("Succ√© ü•É"); // JSON data parsed by `data.json()` call
          });

        function shuffle(array) {
          var currentIndex = array.length, randomIndex;

          // While there remain elements to shuffle...
          while (currentIndex != 0) {

            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex--;

            // And swap it with the current element.
            [array[currentIndex], array[randomIndex]] = [
              array[randomIndex], array[currentIndex]];
          }

          return array;
        }


      }
    </script>

    <%include ./partials/footer.ejs %>